Fibonocci by recurssion:
Time Complexity: T(n) = T(n-1) + T(n-2) which is exponential. 
int fib(int n)
{
    if (n <= 1)
        return n;
    return fib(n-1) + fib(n-2);
}

normal dynamic programming
    int f[n + 2]; 
    int i;

    // 0th and 1st number of the 
    // series are 0 and 1
    f[0] = 0;
    f[1] = 1;

    for(i = 2; i <= n; i++)
    {
        
       //Add the previous 2 numbers 
       // in the series and store it
       f[i] = f[i - 1] + f[i - 2];
    }

int fib(int n) {
  double phi = (1 + sqrt(5)) / 2;
  return round(pow(phi, n) / sqrt(5));
}

-----------------------------------------------------------------------------------------------------------------

